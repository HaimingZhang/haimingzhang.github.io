---
layout: post
title: 深入理解java虚拟机（1）
date: 2017-08-30 15:32:24.000000000 +09:00
---

### java内存模型分为：  
```
虚拟栈
本地方法栈
堆
程序计数器
```  
#### 虚拟栈  
java 虚拟机栈，用于存储局部变量，操作数栈，动态链接，方法出口信息

#### 本地方法栈  
本地方法栈用于存储虚拟机使用到的native方法

#### java堆
java堆 是java虚拟机管理内存中最大的区域，java堆是被所有线程共享的  
java堆基本配置：-Xmx -Xms  
方法区与java堆一样，是各个线程之间内存区域，用于存储已被虚拟机加载的类信息，常量，静态变量，即编译后的代码等数据， 永久代  
直接内存  
nio为了提高效率，采取了直接读取内存的方式  

>>>  如何判断对象是否存活？  
1. 某些人说是用的计数算法，那两个对象之间相互引用是怎么说的  
2. 可达性分析算法

在java语言中可作为GC Roots的对象包括如下几种  
1. 虚拟机栈中引用的对象  
2. 方法区中静态属性引用的对象  
3. 方法区中常量引用的对象  
4. native方法引用的对象  

无用的类？  
该类的所有的实例都已经被回收，也就是Java堆中不存在该类的所有实例
加载该类的classLoader已经被回收  
该类对应的java.lang.class对象没有任何地方被引用，无论在任何地方通过反射访问该类的方法  


[jekyll-docs]: http://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
